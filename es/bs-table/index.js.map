{"version":3,"file":"index.js","sources":["../../src/components/BsTable/BsTableItem.tsx","../../src/components/BsTable/index.tsx","../../packages/components/bsTable/index.ts"],"sourcesContent":["/*\n * @Author: 陈宇环\n * @Date: 2022-04-08 13:49:50\n * @LastEditTime: 2023-07-03 15:44:38\n * @LastEditors: 陈宇环\n * @Description:\n */\nimport { defineComponent, toRefs } from 'vue';\nimport BsTableItem from './BsTableItem';\nimport { CustomDynamicComponent } from '../CustomDynamicComponent';\nexport default defineComponent({\n    name: 'BsTableItem',\n    components: {},\n    props: {\n        itemData: {\n            type: Object,\n            default() {\n                return {\n                    prop: 'prop',\n                    label: 'label',\n                };\n            },\n        },\n    },\n    setup(props) {\n        const { itemData } = toRefs(props);\n        const dynamicComponent = new CustomDynamicComponent();\n        const { dynamicTableColumn } = dynamicComponent;\n        // 多级头递归\n        const childrenDom = itemData.value.children && itemData.value.children.length > 0\n            ? itemData.value.children.map((item, index) => (<BsTableItem key={item.prop ? item.prop : '' + index} item-data={item}></BsTableItem>))\n            : null;\n        return () => {\n            // 序号\n            if (itemData.value.type && itemData.value.type === 'index') {\n                return <dynamicTableColumn type=\"index\" width={itemData.value.width} min-width={itemData.value.minWidth} align={itemData.value.align ? itemData.value.align : 'center'} fixed={itemData.value.fixed ? itemData.value.fixed : false} {...itemData.value.nativeProps}/>;\n            }\n            // const itemDataProps: columnsItemConfig = _.cloneDeep(itemData.value)\n            // 解决element-ui报错问题\n            itemData.value.children = undefined;\n            return (<dynamicTableColumn prop={itemData.value.prop} label={itemData.value.label} width={itemData.value.width} min-width={itemData.value.minWidth} align={itemData.value.align ? itemData.value.align : 'center'} fixed={itemData.value.fixed ? itemData.value.fixed : false} {...itemData.value.nativeProps} v-slots={{\n                    default: (scope) => {\n                        return <>\n                {itemData.value.render ?\n                                (typeof itemData.value.render === 'function' ? itemData.value.render(scope) : itemData.value.render) :\n                                scope.row[itemData.value.prop]}\n                {/* 多级头部 */}\n                {childrenDom}\n              </>;\n                    },\n                }}></dynamicTableColumn>);\n        };\n    },\n});\n","/*\n * @Author: 陈宇环\n * @Date: 2022-04-08 13:49:50\n * @LastEditTime: 2023-07-05 14:44:49\n * @LastEditors: 陈宇环\n * @Description:\n */\nimport { defineComponent, toRefs, reactive, ref, onMounted, watch } from 'vue';\nimport BsTableItem from './BsTableItem';\nimport styles from '@/components/BsTable/style.module.scss';\nimport { CustomDynamicComponent } from '../CustomDynamicComponent';\nexport default defineComponent({\n    name: 'BsTable',\n    components: {},\n    props: {\n        tableConfig: {\n            type: Object,\n            default() {\n                return {}; // 默认值请看defaultTableConfig\n            },\n        },\n        pagingConfig: {\n            type: Object,\n            default() {\n                return {}; // 默认值请看defaultPagingConfig\n            },\n        },\n        columns: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            },\n        },\n        loadData: {\n            type: Function,\n            required: true,\n            default() {\n                return () => {\n                    return new Promise((resolve) => {\n                        resolve({\n                            list: [],\n                            total: 0,\n                        });\n                    });\n                };\n            },\n        },\n    },\n    setup(props, { expose }) {\n        const { loadData, columns, } = toRefs(props);\n        const defaultTableConfig = {\n            ifInitLoadData: true,\n            rowKey: 'id',\n            border: true,\n            stripe: true,\n        };\n        /**\n         * 当ui切换为ant-Design-vue时，转为columns为ant-Design-vue的columns格式 start\n         * @param data columns数据\n         */\n        const changeTableColumns = (data) => {\n            const arr = [...data];\n            arr.forEach((v) => {\n                v.title = v.label;\n                if (v.children && v.children.length) {\n                    changeTableColumns(v.children);\n                }\n                else {\n                    v.dataIndex = v.prop;\n                }\n            });\n        };\n        if (CustomDynamicComponent.language === CustomDynamicComponent.antLanguage) {\n            changeTableColumns(columns.value);\n        }\n        /**\n         * 当ui切换为ant时，转为columns为ant-Design-vue的columns格式 end\n         * @param data columns数据\n         */\n        const cloneTableConfig = reactive({\n            ...defaultTableConfig,\n            ...props.tableConfig,\n        });\n        watch(() => props.tableConfig, () => {\n            Object.assign(cloneTableConfig, defaultTableConfig, props.tableConfig);\n        }, { immediate: true, deep: true });\n        const defaultPagingConfig = {\n            open: true,\n            pageIndex: 1,\n            pageSize: 10,\n            total: 0,\n            layout: 'total, sizes, prev, pager, next',\n            // ant-ui相关\n            showTotal: (total) => `共 ${total} 条`,\n            showSizeChanger: true,\n        };\n        const clonePagingConfig = reactive({\n            ...defaultPagingConfig,\n            ...props.pagingConfig,\n        });\n        watch(() => props.pagingConfig, () => {\n            Object.assign(clonePagingConfig, defaultPagingConfig, props.pagingConfig);\n        }, { immediate: true, deep: true });\n        const tableDom = ref(null);\n        const radio = ref(undefined);\n        const loading = ref(false);\n        const pageInfo = reactive({\n            pageIndex: clonePagingConfig.pageIndex,\n            pageSize: clonePagingConfig.pageSize,\n            total: clonePagingConfig.total,\n        });\n        const list = ref([]);\n        const getList = async ({ pageIndex = pageInfo.pageIndex, pageSize = pageInfo.pageSize } = {}) => {\n            try {\n                loading.value = true;\n                const result = await loadData.value({\n                    pageIndex,\n                    pageSize,\n                });\n                loading.value = false;\n                if (result.success) {\n                    list.value = result.list;\n                    pageInfo.total = result.total;\n                }\n                pageInfo.pageIndex = pageIndex;\n                pageInfo.pageSize = pageSize;\n            }\n            catch (error) {\n                console.log(error);\n            }\n        };\n        expose({\n            getList,\n        });\n        onMounted(function () {\n            if (cloneTableConfig.ifInitLoadData) {\n                getList();\n            }\n        });\n        // 分页size变化\n        const handleSizeChange = (val) => {\n            console.log(`${val} items per page`);\n            pageInfo.pageIndex = 1;\n            pageInfo.pageSize = val;\n            clonePagingConfig.pageSizeChange && clonePagingConfig.pageSizeChange(val);\n            getList();\n        };\n        // 当前页变化\n        const handleCurrentChange = (val) => {\n            console.log(`current page: ${val}`);\n            pageInfo.pageIndex = val;\n            clonePagingConfig.pageIndexChange && clonePagingConfig.pageIndexChange(val);\n            getList();\n        };\n        // 勾选事件\n        const handleSelectionChange = (selection) => {\n            console.log('table-handleSelectionChange', selection);\n            if (cloneTableConfig.rowSelection && cloneTableConfig.rowSelection.onChange) {\n                cloneTableConfig.rowSelection.onChange(selection);\n            }\n        };\n        return () => {\n            const dynamicComponent = new CustomDynamicComponent();\n            const { dynamicTable, dynamicTableColumn, dynamicRadio, dynamicPagination } = dynamicComponent;\n            return (<div class={[styles.BsTable]}>\n          <dynamicTable v-loading={loading.value} height=\"100%\" ref={tableDom} class={[styles.table]} data={list.value} columns={columns.value} data-source={list.value} style={{ maxWidth: '100%' }} row-key={cloneTableConfig.rowKey} pagination={false} // ant 特有属性，关闭table自带分页\n             {...cloneTableConfig.nativeProps} onSelectionChange={(val) => handleSelectionChange(val)}>\n            {/* 只有el-ui走这段渲染逻辑，ant-Design-vue是通过columns直接生成的 */}\n            {CustomDynamicComponent.language === CustomDynamicComponent.eleLanguage ? <>\n              {/* 需要多选行选择按钮 */}\n              {cloneTableConfig.rowSelection && cloneTableConfig.rowSelection.type === 'checkout' ? (<dynamicTableColumn type=\"selection\" align=\"center\" selectable={(row, index) => {\n                            return cloneTableConfig.rowSelection?.selectable ? cloneTableConfig.rowSelection?.selectable(row, index) : true;\n                        }}/>) : null}\n              {/* 需要单选行选择按钮 */}\n              {cloneTableConfig.rowSelection && cloneTableConfig.rowSelection.type === 'radio' ? (<dynamicTableColumn label=\"\" align=\"center\" width=\"60\" fixed v-slots={{\n                            default: (scope, column, index) => {\n                                return (<div style={{ textAlign: 'center' }}>\n                          <dynamicRadio disabled={cloneTableConfig.rowSelection?.selectable ? !cloneTableConfig.rowSelection?.selectable(scope.row, index) : false} class={[styles.rowRadio]} v-model={radio.value} label={scope.row[cloneTableConfig.rowKey ? cloneTableConfig.rowKey : 'id']} onChange={(val) => handleSelectionChange(val)}></dynamicRadio>\n                        </div>);\n                            },\n                        }}></dynamicTableColumn>) : null}\n              {columns.value.map((item, index) => {\n                        return (\n                        // 递归组件\n                        <BsTableItem key={item.prop ? item.prop : '' + index} item-data={item}></BsTableItem>);\n                    })}</> : null}\n          </dynamicTable>\n          {clonePagingConfig.open && <div style={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        padding: '15px 0',\n                    }}>\n              <dynamicPagination current-page={pageInfo.pageIndex} page-size={pageInfo.pageSize} layout={defaultPagingConfig.layout} total={pageInfo.total} background {...clonePagingConfig.nativeProps} onSizeChange={(val) => handleSizeChange(val)} onCurrentChange={(val) => handleCurrentChange(val)} \n                // ant-ui相关属性\n                current={pageInfo.pageIndex} onShowSizeChange={(current, size) => handleSizeChange(size)} onChange={(page) => handleCurrentChange(page)}/>\n            </div>}\n        </div>);\n        };\n    },\n});\nexport * from './interface/index';\n","import table from '../../../src/components/BsTable/index';\ntable.install = function (Vue) {\n    Vue.component(table.name, BsTable);\n};\nexport default table;\nexport const BsTable = table;\nexport * from '../../../src/components/BsTable/interface/index';\n"],"names":["defineComponent","name","components","props","itemData","type","Object","default","_default","prop","label","setup","_toRefs","toRefs","dynamicComponent","CustomDynamicComponent","dynamicTableColumn","childrenDom","value","children","length","map","item","index","_createVNode","BsTableItem","_mergeProps","width","minWidth","align","fixed","nativeProps","undefined","scope","_Fragment","render","row","tableConfig","pagingConfig","columns","Array","required","loadData","Function","Promise","resolve","list","total","_ref","expose","defaultTableConfig","ifInitLoadData","rowKey","border","stripe","changeTableColumns","data","arr","_toConsumableArray","forEach","v","title","dataIndex","language","antLanguage","cloneTableConfig","reactive","_objectSpread","watch","assign","immediate","deep","defaultPagingConfig","open","pageIndex","pageSize","layout","showTotal","concat","showSizeChanger","clonePagingConfig","tableDom","ref","radio","loading","pageInfo","getList","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref3","_ref3$pageIndex","_ref3$pageSize","result","_args","arguments","wrap","_callee$","_context","prev","next","sent","success","t0","console","log","stop","apply","onMounted","handleSizeChange","val","pageSizeChange","handleCurrentChange","pageIndexChange","handleSelectionChange","selection","rowSelection","onChange","dynamicTable","dynamicRadio","dynamicPagination","styles","BsTable","_withDirectives","table","maxWidth","onSelectionChange","eleLanguage","selectable","_cloneTableConfig$row","_cloneTableConfig$row2","column","_cloneTableConfig$row3","_cloneTableConfig$row4","textAlign","rowRadio","onUpdateModelValue","$event","_resolveDirective","display","justifyContent","padding","onSizeChange","onCurrentChange","onShowSizeChange","current","size","page","install","Vue","component"],"mappings":"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"}
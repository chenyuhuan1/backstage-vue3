{"version":3,"file":"index.js","sources":["../../src/utils/validator.ts","../../src/components/BsForm/components/BsPasswod.tsx","../../src/components/BsForm/components/BsTextarea.tsx","../../src/components/BsForm/components/index.ts","../../src/components/BsForm/index.tsx","../../packages/components/bsForm/index.ts"],"sourcesContent":["const commonRules = {\n    amt: [/(^[1-9]([0-9]+)?(\\.[0-9]{1,6})?$)|(^(0){1}$)|(^[0-9]\\.[0-9]([0-9])?$)/, '请填写有效金额'],\n    digits: [/^\\d+$/, '请填写数字'],\n    trim: [/^\\S{0,100000000000000}\\S$/, '请清除空格'],\n    positivedigits: [/^[+]{0,1}(\\d+)$/, '请填写正整数'],\n    letters: [/^[a-z]+$/i, '请填写字母'],\n    date: [/^\\d{4}-\\d{2}-\\d{2}$/, '请填写有效的日期，格式:yyyy-mm-dd'],\n    time: [/^([01]\\d|2[0-3])(:[0-5]\\d){1,2}$/, '请填写有效的时间，00:00到23:59之间'],\n    email: [/^[\\w+-]+(\\.[\\w+-]+)*@[a-z\\d-]+(\\.[a-z\\d-]+)*\\.([a-z]{2,4})$/i, '请填写有效的邮箱'],\n    url: [/^(https?|s?ftp):\\/\\/\\S+$/i, '请填写有效的网址'],\n    qq: [/^[1-9]\\d{4,}$/, '请填写有效的QQ号'],\n    IDcard: [/^[1-9]{1}[0-9]{14}$|^[1-9]{1}[0-9]{16}([0-9]|[xX])$/, '请填写正确的身份证号码'],\n    IDcardNew: [\n        /^[1-9]{1}[0-9]{9}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)[0-9]{3}([0-9]|[xX])$/,\n        '请填写正确的身份证号码',\n    ],\n    tel: [/^(?:(?:0\\d{2,3}[- ]?[1-9]\\d{6,7})|(?:[48]00[- ]?[1-9]\\d{6}))$/, '请填写有效的电话号码'],\n    mobile: [/^1[3-9]\\d{9}$/, '请填写有效的手机号'],\n    zipcode: [/^\\d{6}$/, '请检查邮政编码格式'],\n    chinese: [/^[\\u0391-\\uFFE5]+$/, '请填写中文字符'],\n    username: [/^\\w{3,12}$/, '请填写3-12位数字、字母、下划线'],\n    password: [/^[\\d]{6}$/, '请填写6位数字，不能包含空格'],\n    msgCode: [/^[\\d]{6}$/, '请输入6位有效验证码'],\n    cvv2: [/^[0-9]{3,4}$/, '请填写有效的CVV2'],\n    creditcardexp: [/^[\\d]{4}$/, '请填写正确的有效期'],\n    bankcard: [/^([1-9]{1})(\\d{14,20})$/, '请填写有效的银行卡号'],\n    chkmoney: [\n        /^(([1-9][0-9]{0,12})|(([1]\\.\\d{1,2}|[1-9][0-9]{0,12}\\.\\d{1,2})))$/,\n        '请输入正确的金额',\n    ],\n    realname: [/^.{1,20}$/, '请填写1-20位的真实姓名'],\n    percent: [/^(\\d|[1-9]\\d|100)(\\.\\d{1,2})?$/, '利率值应在0-100之间'],\n    chinese20: [/^[\\u4e00-\\u9fa5]{1,20}$/, '请输入1~20个中文字符'],\n    chinese18: [/^[\\u4e00-\\u9fa5]{1,20}$/, '请输入1~18个中文字符'],\n    chinese10: [/^[\\u4e00-\\u9fa5]{1,10}$/, '请输入1~10个中文字符'],\n    chinese64: [/^[\\u4e00-\\u9fa5]{1,20}$/, '请输入1~64个中文字符'],\n    chinese50: [/^[\\u4e00-\\u9fa5]{1,50}$/, '请输入1~50个中文字符'],\n    chinese1000: [/^[\\u4e00-\\u9fa5]{1,1000}$/, '请输入1~1000个中文字符'],\n    arbitrarily30to1000: [/^(\\s*[\\S]\\s*){30,1000}$/, '请输入30~1000个字符'],\n    // accept: function(element, params) {\n    //   if (!params) return true\n    //   let ext = params[0],\n    //     value = $(element).val()\n    //   return (ext === '*') ||\n    //              (new RegExp('.(?:' + ext + ')$','i')).test(value) ||\n    //              this.renderMsg('只接受{1}后缀的文件',ext.replace(/\\|/g, ','))\n    // },\n    // 使用正则表达式定义规则\n    // industRegist : [/^\\d{15}$/, '请填写15位工商注册号','请填写18位社会信用代码'],\n    // 使用函数定义规则\n    bizcode: [/^[a-zA-Z0-9]{15}$|^[a-zA-Z0-9]{18}$/, '请填写正确的统一社会信用代码'],\n};\n// --------------当 required 为true,字段必填时校验--------------\n// 身份证号\nexport function checkIdNo(value, callback) {\n    const [regex] = commonRules.IDcard;\n    if (regex.test(value)) {\n        callback();\n    }\n    else {\n        callback(commonRules.IDcard[1]);\n    }\n}\n// 邮箱\nexport function checkEmail(value, callback) {\n    const [regex] = commonRules.email;\n    if (regex.test(value)) {\n        callback();\n    }\n    else {\n        callback(commonRules.email[1]);\n    }\n}\n// 手机号\nexport function checkPhoneNo(value, callback) {\n    const [regex] = commonRules.mobile;\n    if (regex.test(value)) {\n        callback();\n    }\n    else {\n        callback(commonRules.mobile[1]);\n    }\n}\n// 金额\nexport function checkAmt(value, callback) {\n    const [regex] = commonRules.amt;\n    if (regex.test(value)) {\n        callback();\n    }\n    else {\n        callback(commonRules.amt[1]);\n    }\n}\n// 银行卡号\nexport function checkBankCard(value, callback) {\n    const [regex] = commonRules.bankcard;\n    if (regex.test(value)) {\n        callback();\n    }\n    else {\n        callback(commonRules.bankcard[1]);\n    }\n}\n// 姓名\nexport function checkName(value, callback) {\n    const [regex] = commonRules.realname;\n    if (regex.test(value)) {\n        callback();\n    }\n    else {\n        callback(commonRules.realname[1]);\n    }\n}\n// 渠道\nexport function checkChannel(value, callback) {\n    if (value.length > 0 && value.length < 4) {\n        callback();\n    }\n    else {\n        callback('请勾选1-3个主要获取渠道');\n    }\n}\n// 正整数\nexport function positivedigits(value, callback) {\n    const [regex] = commonRules.positivedigits;\n    if (regex.test(value)) {\n        callback();\n    }\n    else {\n        callback(commonRules.positivedigits[1]);\n    }\n}\n// 数字\nexport function checkNumber(value, callback) {\n    const [regex] = commonRules.digits;\n    if (regex.test(value)) {\n        callback();\n    }\n    else {\n        callback(commonRules.digits[1]);\n    }\n}\n// 百分数\nexport function checkPercent(value, callback) {\n    const [regex] = commonRules.percent;\n    if (regex.test(value)) {\n        callback();\n    }\n    else {\n        callback(commonRules.percent[1]);\n    }\n}\n// --------------当 字段非必填时校验--------------\n// 手机号\nexport function checkPhoneNull(value, callback) {\n    const [regex] = commonRules.mobile;\n    if (regex.test(value)) {\n        callback();\n    }\n    else if (value) {\n        callback(commonRules.mobile[1]);\n    }\n    else {\n        callback();\n    }\n}\n// 数字\nexport function checkNumberNull(value, callback) {\n    const [regex] = commonRules.digits;\n    if (regex.test(value)) {\n        callback();\n    }\n    else if (value) {\n        callback(commonRules.digits[1]);\n    }\n    else {\n        callback();\n    }\n}\n// 金额\nexport function checkAmtNull(value, callback) {\n    const [regex] = commonRules.amt;\n    if (regex.test(value)) {\n        callback();\n    }\n    else if (value) {\n        callback(commonRules.amt[1]);\n    }\n    else {\n        callback();\n    }\n}\n// 邮箱\nexport function checkEmailNull(value, callback) {\n    const [regex] = commonRules.email;\n    if (regex.test(value)) {\n        callback();\n    }\n    else if (value) {\n        callback(commonRules.email[1]);\n    }\n    else {\n        callback();\n    }\n}\n// 统一社会信用代码\nexport function checkBizcode(value, callback) {\n    const [regex] = commonRules.bizcode;\n    if (regex.test(value)) {\n        callback();\n    }\n    else if (value) {\n        callback(commonRules.bizcode[1]);\n    }\n    else {\n        callback();\n    }\n}\nexport { commonRules };\n","/*\n * @Author: 陈宇环\n * @Date: 2023-03-24 14:01:06\n * @LastEditTime: 2023-07-03 15:40:08\n * @LastEditors: 陈宇环\n * @Description:\n */\nimport { defineComponent } from 'vue';\nimport styles from '@/components/BsForm/style.module.scss';\nimport { CustomDynamicComponent } from '@/components/CustomDynamicComponent';\nexport default defineComponent({\n    name: 'BsPasswod',\n    props: {\n        modelValue: {\n            type: [String, Number],\n            default: '',\n        },\n        config: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n    emits: ['update:modelValue', 'change'],\n    setup(props, { emit }) {\n        const { dynamicPassword } = new CustomDynamicComponent();\n        function updateValue(value) {\n            let cloneValue = value;\n            // ant-Design-vue 无input事件，value获取到的是原生input事件的e\n            if (CustomDynamicComponent.language === CustomDynamicComponent.antLanguage) {\n                cloneValue = value.target.value;\n            }\n            emit('update:modelValue', cloneValue);\n            emit('change', {\n                prop: props.config?.prop ?? '',\n                value: cloneValue,\n            });\n        }\n        return () => {\n            return <div class={['BsPassword', styles.width100]}>\n        <dynamicPassword class=\"password\" type='password' model-value={props.modelValue} placeholder={props.config.placeholder || `请输入${props.config?.label ?? ''}`} disabled={!!props.config.disabled} autocomplete=\"on\" \n            /** ant-design-vue && ele 统一封装 - start */\n            clearable={props.config.clearable !== false} // ele 特有属性 - 清除按钮\n             allowClear={props.config.allowClear ?? props.config.clearable !== false} // ant-design-vue特有属性\n             show-password={props.config.showPassword} // ele 特有属性 - 是否显隐密码切换按钮\n             visibilityToggle={props.config.showPassword} // ant-design-vue特有属性 - 是否显隐密码切换按钮\n             \n            /** ant-design-vue && ele 统一封装 - end */\n            {...props.config.nativeProps} onInput={updateValue}/>\n      </div>;\n        };\n    },\n});\nexport * from '../interface/index';\n","/*\n * @Author: 陈宇环\n * @Date: 2022-12-20 14:37:53\n * @LastEditTime: 2023-07-03 15:40:49\n * @LastEditors: 陈宇环\n * @Description:\n */\nimport { defineComponent } from 'vue';\nimport styles from '@/components/BsForm/style.module.scss';\nimport { CustomDynamicComponent } from '@/components/CustomDynamicComponent';\nexport default defineComponent({\n    name: 'BsTextarea',\n    props: {\n        modelValue: {\n            type: [String, Number],\n            default: '',\n        },\n        config: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n    emits: ['update:modelValue', 'change'],\n    setup(props, { emit }) {\n        const { dynamicTextarea } = new CustomDynamicComponent();\n        function updateValue(value) {\n            let cloneValue = value;\n            // ant-Design-vue 无input事件，value获取到的是原生input事件的e\n            if (CustomDynamicComponent.language === CustomDynamicComponent.antLanguage) {\n                cloneValue = value.target.value;\n            }\n            emit('update:modelValue', cloneValue);\n            emit('change', {\n                prop: props.config?.prop ?? '',\n                value: cloneValue,\n            });\n        }\n        return () => {\n            return <div class={['BsTextarea', styles.width100]}>\n        <dynamicTextarea class=\"textarea\" type='textarea' model-value={props.modelValue} placeholder={props.config.placeholder || `请输入${props.config?.label ?? ''}`} disabled={!!props.config.disabled} \n            /** ant-design-vue && ele 统一封装 - start */\n            clearable={props.config.clearable !== false} // ele 特有属性 - 清除按钮\n             allowClear={props.config.allowClear ?? props.config.clearable !== false} // ant-design-vue特有属性\n             rows={props.config.rows || 3} // ele 特有属性 - 默认area行数\n             autoSize={props.config.autoSize || { minRows: 3, maxRows: 3 }} // ant-design-vue特有属性 - 默认area行数\n             \n            /** ant-design-vue && ele 统一封装 - end */\n            {...props.config.nativeProps} onInput={updateValue}/>\n      </div>;\n        };\n    },\n});\nexport * from '../interface/index';\n","import BsInput from './BsInput';\nimport BsPasswod from './BsPasswod';\nimport BsTextarea from './BsTextarea';\nimport BsNumber from './BsNumber';\nimport BsSelect from './BsSelect';\nimport BsRadio from './BsRadio';\nimport BsCheckbox from './BsCheckbox';\nimport BsDate from './BsDate';\nimport BsDateRange from './BsDateRange';\nimport BsNumberRange from './BsNumberRange';\nimport BsCascader from './BsCascader';\nimport BsSwitch from './BsSwitch';\nimport BsText from './BsText';\n// 组件注册\nexport const getComponentByType = (item) => {\n    switch (item.type) {\n        case 'input':\n            return BsInput;\n        case 'textarea':\n            return BsTextarea;\n        case 'password':\n            return BsPasswod;\n        case 'number':\n            return BsNumber;\n        case 'select':\n            return BsSelect;\n        case 'radio':\n            return BsRadio;\n        case 'checkbox':\n            return BsCheckbox;\n        case 'year':\n        case 'month':\n        case 'week':\n        case 'date':\n        case 'datetime':\n        case 'dates':\n            return BsDate;\n        case 'yearRange':\n        case 'monthRange':\n        case 'dateRange':\n        case 'weekRange':\n        case 'datetimeRange':\n            return BsDateRange;\n        case 'numberRange':\n            return BsNumberRange;\n        case 'cascader':\n            return BsCascader;\n        case 'switch':\n            return BsSwitch;\n        case 'text':\n            return BsText;\n        default:\n            return BsInput;\n        // throw new Error('配置项控件${col.type}不存在')\n    }\n};\n","/*\n * @Author: 陈宇环\n * @Date: 2022-12-20 17:13:23\n * @LastEditTime: 2023-06-26 14:53:57\n * @LastEditors: 陈宇环\n * @Description: 表单组件\n */\nimport { defineComponent, watch, ref, reactive, nextTick } from 'vue';\nimport { CustomDynamicComponent } from '@/components/CustomDynamicComponent';\nimport { commonRules } from '@/utils/validator';\n// 导入所有自定义form控件组件\nimport * as widget from './components/index';\nexport default defineComponent({\n    name: 'BsForm',\n    props: {\n        modelValue: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n        config: {\n            type: Object,\n            default() {\n                return {}; // 默认值请看defaultConfig变量\n            },\n        },\n    },\n    emits: ['update:modelValue', 'search', 'export', 'reset'],\n    setup(props, { emit, expose }) {\n        // 获取表单组件实例\n        const ruleFormRef = ref();\n        // config默认值- 没有通过props默认值是因为想实现config字段级别的默认值\n        const defaultConfig = {\n            colNum: 6,\n            columns: [],\n            labelWidth: '100px',\n            notOpBtn: false,\n            opBtnCol: 6,\n            isSearch: true,\n            isReset: true,\n            isExport: false, // 是否需要导出按钮\n        };\n        const cloneConfig = reactive({\n            ...defaultConfig,\n            ...props.config,\n        });\n        // 初始绑定表单\n        const initForm = reactive({ value: {} });\n        // 校验规则\n        const rules = reactive({});\n        /**\n         * 表单默认值、rules初始化\n         * */\n        const initFormFn = async () => {\n            const cloneInitForm = {};\n            cloneConfig.columns.forEach((item) => {\n                if (item.multiple) {\n                    cloneInitForm[item.prop] = props.modelValue[item.prop]\n                        ? Array.isArray(props.modelValue[item.prop])\n                            ? props.modelValue[item.prop]\n                            : [props.modelValue[item.prop]]\n                        : undefined;\n                }\n                else {\n                    cloneInitForm[item.prop] = props.modelValue[item.prop];\n                }\n            });\n            initForm.value = { ...props.modelValue, ...cloneInitForm };\n        };\n        // 正则验证\n        const asyncValidator = (val, type) => val ? commonRules[type][0].test(val) : true;\n        // 错误消息打印\n        const asyncMessage = (type) => commonRules[type][1];\n        const initRulesFn = () => {\n            const cloneRules = {};\n            cloneConfig.columns.forEach((item) => {\n                if (!item.hide) {\n                    cloneRules[item.prop] = [\n                        {\n                            required: item.required,\n                            message: `${['input', 'textarea'].includes(item.type) ? '请输入' : '请选择'}${item.label}`,\n                            trigger: 'change',\n                        },\n                        ...(item.inlayRules ? item.inlayRules.map((item) => {\n                            return {\n                                validator: (rule, value) => {\n                                    if (!asyncValidator(value, item.validatorName)) {\n                                        return Promise.reject(item.message ?? asyncMessage(item.validatorName));\n                                    }\n                                    return Promise.resolve();\n                                },\n                                trigger: item.trigger ?? 'change',\n                            };\n                        }) : []),\n                        ...(item.rules ? item.rules : []),\n                    ];\n                }\n            });\n            Object.assign(rules, cloneRules);\n        };\n        watch(() => props.config, () => {\n            Object.assign(cloneConfig, defaultConfig, props.config);\n            initRulesFn();\n            initFormFn();\n        }, { immediate: true, deep: true });\n        watch(() => props.modelValue, () => {\n            initFormFn();\n        }, { immediate: true, deep: true });\n        const updateModelValue = () => {\n            emit('update:modelValue', initForm.value);\n        };\n        // 自适应列宽\n        const getSpan = (item) => {\n            const spanArray = [12, 8, 8, 6, 6]; // [xs,sm,md,lg,xl]\n            // 对时间区间做特殊处理\n            if (item.type.indexOf('Range') !== -1) {\n                // 区间为分栏数量的两倍\n                return spanArray.map((v) => v * 2);\n            }\n            return spanArray;\n        };\n        // 表单整体校验方法-已暴露\n        const validate = async () => {\n            return new Promise(async (resolve) => {\n                await nextTick();\n                ruleFormRef.value.validate().then(() => {\n                    resolve(true);\n                })\n                    .catch((err) => {\n                    console.log(err);\n                    resolve(false);\n                });\n            });\n        };\n        // 验证表单具体的某个字段方法-已暴露\n        const validateField = async (prop) => {\n            return new Promise(async (resolve) => {\n                await nextTick();\n                ruleFormRef.value.validateFields(prop).then(() => {\n                    resolve(true);\n                })\n                    .catch((err) => {\n                    console.log(err);\n                    resolve(false);\n                });\n            });\n        };\n        // 表单重置方法-已暴露\n        const resetFields = async (prop) => {\n            await nextTick();\n            ruleFormRef.value?.resetFields(prop);\n            updateModelValue();\n        };\n        // 清理表单验证信息-已暴露\n        const clearValidate = async (prop) => {\n            await nextTick();\n            ruleFormRef.value?.clearValidate(prop);\n        };\n        const scrollToField = async (field) => {\n            await nextTick();\n            ruleFormRef.value?.scrollToField(field);\n        };\n        const searchFn = async () => {\n            const verify = await validate();\n            if (verify) {\n                cloneConfig.loading = true;\n                emit('search');\n                await (cloneConfig.searchFn && cloneConfig.searchFn(initForm.value));\n                cloneConfig.loading = false;\n            }\n            else {\n                console.log('error searchFn!');\n            }\n        };\n        const exportFn = async () => {\n            const verify = await validate();\n            if (verify) {\n                cloneConfig.loading = true;\n                emit('export');\n                await (cloneConfig.exportFn && cloneConfig.exportFn(initForm.value));\n                cloneConfig.loading = false;\n            }\n            else {\n                console.log('error exportFn!');\n            }\n        };\n        const currentExportState = ref(false); // 当前收起展开状态 默认收起\n        const expandFn = () => {\n            currentExportState.value = !currentExportState.value;\n            cloneConfig.columns && cloneConfig.columns.forEach((item) => {\n                if (!item.hide && item?.expandDefault !== undefined) {\n                    item.expandDefault = currentExportState.value;\n                }\n            });\n        };\n        // 部分select组件，后台需要设置两个值   比如：选择人员，后台同时需要 人员id和人员名称时\n        const setProp2 = (prop2, value) => {\n            initForm.value[prop2] = value;\n            updateModelValue();\n        };\n        const resetFn = async () => {\n            ruleFormRef.value.resetFields();\n            updateModelValue();\n            setTimeout(() => {\n                emit('reset');\n                cloneConfig.resetFn && cloneConfig.resetFn();\n            });\n        };\n        expose({ validate, resetFields, clearValidate, scrollToField, validateField, resetFn });\n        // 根据item：columnsFormBase获取返回对应的src/components里的组件\n        const componentRender = (item) => {\n            const componentInstance = widget.getComponentByType(item);\n            return <componentInstance v-models={[\n                    [initForm.value[item.prop]],\n                    [initForm.value[item.propEnd], 'propEnd'],\n                    [initForm.value[item.files], 'fileList'],\n                ]} config={item} onChange={(params) => {\n                    item?.change && item?.change(params);\n                    updateModelValue();\n                }} onSetProp2={(value) => {\n                    item.prop2 && setProp2(item.prop2, value);\n                }}/>;\n        };\n        return () => {\n            const dynamicComponent = new CustomDynamicComponent();\n            const { dynamicForm, dynamicRow, dynamicCol, dynamicFormItem, dynamicButton } = dynamicComponent;\n            return (<div class=\"BsForm\">\n          <dynamicForm ref={ruleFormRef} v-loading={cloneConfig.loading} label-width={cloneConfig.labelWidth || '100px'} model={initForm.value} rules={rules} validate-on-rule-change={false} class=\"ruleForm\" disabled={cloneConfig.disabled} {...cloneConfig.nativeProps}>\n            <dynamicRow gutter={15}>\n              {cloneConfig.columns.map((item) => {\n                    return (<>\n                    {item.hide !== true && item.expandDefault !== false && (<dynamicCol xs={item.colNum || props.config.colNum || getSpan(item)[0]} sm={item.colNum || props.config.colNum || getSpan(item)[1]} md={item.colNum || props.config.colNum || getSpan(item)[2]} lg={item.colNum || props.config.colNum || getSpan(item)[3]} xl={item.colNum || props.config.colNum || getSpan(item)[4]}>\n                        <dynamicFormItem label-width={item.labelWidth ||\n                                props.config.labelWidth ||\n                                '100px'} label={item.label} prop={CustomDynamicComponent.language === CustomDynamicComponent.antLanguage ? undefined : item.prop} name={item.prop}>\n                          {item.type === 'render' // 自定义render函数（只替换form-item-conent部分，label不会被render）\n                                ? item?.render() // ep-form-item__content 部分的render函数\n                                : componentRender(item) // 根据item：columnsFormBs中的type属性获取对应的自定义组件\n                            }\n                        </dynamicFormItem>\n                      </dynamicCol>)}\n                  </>);\n                })}\n              {!cloneConfig.notOpBtn && cloneConfig.columns?.length > 0 && (<dynamicCol span={cloneConfig.opBtnCol} class=\"btn-wrap\">\n                  <div style=\"display: flex;align-items: center;height: 100%;padding-bottom: 18px;box-sizing: border-box;\">\n                    {cloneConfig.isSearch && (<dynamicButton type=\"primary\" size=\"small\" onClick={() => {\n                            searchFn();\n                        }}>\n                    搜索\n                      </dynamicButton>)}\n                    {cloneConfig.isReset && (<dynamicButton type=\"warning\" size=\"small\" onClick={() => {\n                            resetFn();\n                        }}>\n                      重置\n                      </dynamicButton>)}\n                    {cloneConfig.isExport && (<dynamicButton type=\"warning\" size=\"small\" onClick={() => {\n                            exportFn();\n                        }}>\n                        导出\n                      </dynamicButton>)}\n                    {cloneConfig.isExpand && (<dynamicButton type=\"primary\" size=\"small\" onClick={() => {\n                            expandFn();\n                        }}>\n                        {currentExportState.value ? '收起' : '展开'}\n                      </dynamicButton>)}\n                    {cloneConfig.appendOpBtn && cloneConfig.appendOpBtn()}\n                  </div>\n                </dynamicCol>)}\n            </dynamicRow>\n          </dynamicForm>\n        </div>);\n        };\n    },\n});\nexport * from './interface/index';\n","import form from '../../../src/components/BsForm/index';\nform.install = function (Vue) {\n    Vue.component(form.name, form);\n};\nexport default form;\nexport const BsForm = form;\nexport * from '../../../src/components/BsForm/interface/index';\n"],"names":["commonRules","amt","digits","trim","positivedigits","letters","date","time","email","url","qq","IDcard","IDcardNew","tel","mobile","zipcode","chinese","username","password","msgCode","cvv2","creditcardexp","bankcard","chkmoney","realname","percent","chinese20","chinese18","chinese10","chinese64","chinese50","chinese1000","arbitrarily30to1000","bizcode","defineComponent","name","props","modelValue","type","String","Number","default","config","Object","_default","emits","setup","_ref","emit","_CustomDynamicCompone","CustomDynamicComponent","dynamicPassword","updateValue","value","_props$config$prop","_props$config","cloneValue","language","antLanguage","target","prop","_props$config$label","_props$config2","_props$config$allowCl","_createVNode","styles","width100","_mergeProps","placeholder","concat","label","disabled","clearable","allowClear","showPassword","nativeProps","dynamicTextarea","rows","autoSize","minRows","maxRows","getComponentByType","item","BsInput","BsTextarea","BsPasswod","BsNumber","BsSelect","BsRadio","BsCheckbox","BsDate","BsDateRange","BsNumberRange","BsCascader","BsSwitch","BsText","expose","ruleFormRef","ref","defaultConfig","colNum","columns","labelWidth","notOpBtn","opBtnCol","isSearch","isReset","isExport","cloneConfig","reactive","_objectSpread","initForm","rules","initFormFn","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cloneInitForm","wrap","_callee$","_context","prev","next","forEach","multiple","Array","isArray","undefined","stop","apply","arguments","asyncValidator","val","test","asyncMessage","initRulesFn","cloneRules","hide","required","message","includes","trigger","_toConsumableArray","inlayRules","map","_item$trigger","validator","rule","validatorName","_item$message","Promise","reject","resolve","assign","watch","immediate","deep","updateModelValue","getSpan","spanArray","indexOf","v","validate","_ref3","_callee3","_callee3$","_context3","abrupt","_ref4","_callee2","_callee2$","_context2","nextTick","then","catch","err","console","log","_x","validateField","_ref5","_callee5","_callee5$","_context5","_ref6","_callee4","_callee4$","_context4","validateFields","_x3","_x2","resetFields","_ref7","_callee6","_ruleFormRef$value","_callee6$","_context6","_x4","clearValidate","_ref8","_callee7","_ruleFormRef$value2","_callee7$","_context7","_x5","scrollToField","_ref9","_callee8","field","_ruleFormRef$value3","_callee8$","_context8","_x6","searchFn","_ref10","_callee9","verify","_callee9$","_context9","sent","loading","exportFn","_ref11","_callee10","_callee10$","_context10","currentExportState","expandFn","expandDefault","setProp2","prop2","resetFn","_ref12","_callee11","_callee11$","_context11","setTimeout","componentRender","componentInstance","widget","onUpdateModelValue","$event","propEnd","onUpdatePropEnd","files","onUpdateFileList","onChange","params","change","onSetProp2","_cloneConfig$columns","dynamicComponent","dynamicForm","dynamicRow","dynamicCol","dynamicFormItem","dynamicButton","_withDirectives","_Fragment","render","length","onClick","_createTextVNode","isExpand","appendOpBtn","_resolveDirective","form","install","Vue","component","BsForm"],"mappings":"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"}
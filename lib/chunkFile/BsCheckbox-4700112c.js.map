{"version":3,"file":"BsCheckbox-4700112c.js","sources":["../../src/components/BsForm/components/BsCheckbox.tsx"],"sourcesContent":["/*\n * @Author: 陈宇环\n * @Date: 2022-12-20 09:56:21\n * @LastEditTime: 2023-07-03 16:09:56\n * @LastEditors: 陈宇环\n * @Description:\n */\nimport { defineComponent, watch, ref } from 'vue';\nimport * as utils from '@/utils/common';\nimport styles from '@/components/BsForm/style.module.scss';\nimport { CustomDynamicComponent } from '@/components/CustomDynamicComponent';\nexport default defineComponent({\n    name: 'BsCheckbox',\n    props: {\n        modelValue: {\n            type: Array,\n            default() {\n                return [];\n            },\n        },\n        config: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n    emits: ['update:modelValue', 'change'],\n    setup(props, { emit }) {\n        const options = ref([]);\n        const optionsLoading = ref(false);\n        watch(() => props.config.options, async () => {\n            // 获取options下拉选项\n            if (Array.isArray(props.config.options)) { // 传入对象数组\n                options.value = props.config.options;\n            }\n            else if (Object.prototype.toString.call(props.config.options) === '[object Object]') { // 字典/接口获取\n                if (props.config.options.type === 'api') {\n                    optionsLoading.value = true;\n                    options.value = await props.config.options.getData();\n                    optionsLoading.value = false;\n                }\n                else if (props.config.options.type === 'dic') {\n                    options.value = utils.getDicByKey(props.config.options.key);\n                }\n            }\n            // 兼容改变\n            options.value = options?.value?.map((v) => {\n                return {\n                    ...v,\n                    label: v[props.config.labelKey || 'label'],\n                    value: v[props.config.valueKey || 'value'],\n                };\n            }) ?? [];\n        }, { immediate: true, deep: true });\n        function updateValue(value) {\n            emit('update:modelValue', value);\n            emit('change', {\n                prop: props.config?.prop ?? '',\n                value,\n                options,\n            });\n        }\n        return () => {\n            const dynamicComponent = new CustomDynamicComponent();\n            const { dynamicCheckBoxGroup, dynamicCheckBox, dynamicCheckBoxButton } = dynamicComponent;\n            // dynamicCheckBoxButton 只有element-plus有这个组件\n            const componentInstance = props.config.showType === 'button' && CustomDynamicComponent.language === CustomDynamicComponent.eleLanguage ? dynamicCheckBoxButton : dynamicCheckBox;\n            return <div class={['BsCheckbox', styles.width100]}>\n        <dynamicCheckBoxGroup loading={optionsLoading.value} class=\"checkbox\" model-value={props.modelValue} placeholder={props.config.placeholder || `请选择${props.config?.label ?? ''}`} disabled={!!props.config.disabled} clearable={props.config.clearable !== false} options={options.value /** 只有ant-design-vue使用该属性 */} {...props.config.nativeProps} onChange={updateValue}>\n          {\n                /** 只有element-plus使用以下逻辑 */\n                CustomDynamicComponent.language === CustomDynamicComponent.eleLanguage && options.value && Array.isArray(options.value) && options.value.map((item, index) => {\n                    return <componentInstance key={item.value + '_' + index} label={item.value} {...props.config.nativeProps} v-slots={props.config.format ? {\n                            default: () => {\n                                return props.config.format(item);\n                            },\n                        } : {}}>\n                {item.label}\n              </componentInstance>;\n                })}\n        </dynamicCheckBoxGroup>\n      </div>;\n        };\n    },\n});\nexport * from '../interface/index';\n"],"names":["defineComponent","name","props","modelValue","type","Array","default","_default","config","Object","emits","setup","_ref","emit","options","ref","optionsLoading","watch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_options$value$map","_options$value","wrap","_callee$","_context","prev","next","isArray","value","prototype","toString","call","getData","sent","utils","key","map","v","_objectSpread","label","labelKey","valueKey","stop","immediate","deep","updateValue","_props$config$prop","_props$config","prop","_props$config$label","_props$config2","dynamicComponent","CustomDynamicComponent","dynamicCheckBoxGroup","dynamicCheckBox","dynamicCheckBoxButton","componentInstance","showType","language","eleLanguage","_createVNode","styles","width100","_mergeProps","placeholder","concat","disabled","clearable","nativeProps","item","index","format"],"mappings":"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"}